# Generated by Django 3.2.4 on 2024-03-11 10:04

import apps.storage.models.data
import apps.storage.models.material
from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_zh', models.CharField(db_index=True, max_length=255, unique=True)),
                ('name_en', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CategoryTree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.UUIDField()),
                ('tree_json', models.JSONField(default=apps.storage.models.material.default_tree_json)),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='DataContentFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('hash_value', models.CharField(max_length=254, null=True)),
                ('size', models.BigIntegerField(default=0)),
                ('real_file_id', models.CharField(max_length=254, null=True)),
                ('file', models.FileField(max_length=1024, upload_to='_fs/data_files/%Y/%m/%d/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataContentImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('hash_value', models.CharField(max_length=254, null=True)),
                ('size', models.BigIntegerField(default=0)),
                ('real_file_id', models.CharField(max_length=254, null=True)),
                ('file', models.ImageField(max_length=1024, upload_to='_fs/data_images/%Y/%m/%d/')),
                ('inserted', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='DataMeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, null=True, size=None)),
                ('doi', models.CharField(blank=True, max_length=255, null=True)),
                ('abstract', models.TextField(blank=True, null=True)),
                ('add_time', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('dc_id', models.CharField(max_length=24, validators=[django.core.validators.RegexValidator('^[a-f\\d]{24}$')])),
                ('importing', models.BooleanField(default=False)),
                ('review_state', models.IntegerField(default=apps.storage.models.data.DataReviewState['PENDING'])),
                ('review_time', models.DateTimeField(null=True)),
                ('disapprove_reason', models.TextField(null=True)),
                ('public_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('visibility', models.IntegerField(db_index=True, default=apps.storage.models.data.DataVisibility['PRIVATE'])),
            ],
            options={
                'verbose_name': 'Data Meta',
                'verbose_name_plural': 'Data Metas',
            },
        ),
        migrations.CreateModel(
            name='DataStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_views', models.IntegerField(db_index=True, default=0)),
                ('num_downloads', models.IntegerField(db_index=True, default=0)),
                ('day', models.DateField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='FileUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ImageUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='MaterialProject',
            fields=[
                ('id', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=512)),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='MaterialSubject',
            fields=[
                ('id', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=512)),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='ProjectSubjectMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Snippet',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('snippet_name', models.CharField(max_length=255)),
                ('add_time', models.DateTimeField(auto_now_add=True)),
                ('content', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, unique=True)),
                ('abstract', models.TextField()),
                ('pub_date', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_private', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False)),
                ('review_state', models.IntegerField(default=0)),
                ('review_time', models.DateTimeField(null=True)),
                ('content', django.contrib.postgres.fields.jsonb.JSONField()),
                ('disapprove_reason', models.TextField(null=True)),
            ],
            options={
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='TemplateDataStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateField(auto_now_add=True, db_index=True)),
                ('num_views', models.IntegerField(default=0)),
                ('num_downloads', models.IntegerField(default=0)),
                ('num_new_data', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='TemporaryDataTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('hash_value', models.CharField(max_length=254, null=True)),
                ('size', models.BigIntegerField(default=0)),
                ('real_file_id', models.CharField(max_length=254, null=True)),
                ('file', models.FileField(max_length=1024, upload_to='_fs/data_template/%Y/%m/%d/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TemporaryExportedFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('hash_value', models.CharField(max_length=254, null=True)),
                ('size', models.BigIntegerField(default=0)),
                ('real_file_id', models.CharField(max_length=254, null=True)),
                ('file', models.FileField(max_length=1024, upload_to='_fs/exported/%Y/%m/%d/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TemporaryUploadedFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('hash_value', models.CharField(max_length=254, null=True)),
                ('size', models.BigIntegerField(default=0)),
                ('real_file_id', models.CharField(max_length=254, null=True)),
                ('file', models.FileField(max_length=1024, upload_to='_fs/temporary_uploaded/%Y/%m/%d/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='temporaryuploadedfile',
            index=models.Index(fields=['file'], name='storage_tem_file_6a56e7_idx'),
        ),
        migrations.AddIndex(
            model_name='temporaryuploadedfile',
            index=models.Index(fields=['created_at'], name='storage_tem_created_9fa30c_idx'),
        ),
        migrations.AddIndex(
            model_name='temporaryexportedfile',
            index=models.Index(fields=['file'], name='storage_tem_file_e2b25e_idx'),
        ),
        migrations.AddIndex(
            model_name='temporaryexportedfile',
            index=models.Index(fields=['created_at'], name='storage_tem_created_319b7f_idx'),
        ),
        migrations.AddField(
            model_name='temporarydatatemplate',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.template'),
        ),
        migrations.AddField(
            model_name='templatedatastatistic',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.template'),
        ),
        migrations.AddField(
            model_name='template',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='storage.category'),
        ),
        migrations.AddField(
            model_name='template',
            name='reviewer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewer', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='template',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='snippet',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='snippet_creater', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='projectsubjectmember',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.materialproject'),
        ),
        migrations.AddField(
            model_name='projectsubjectmember',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='storage.materialsubject'),
        ),
        migrations.AddField(
            model_name='projectsubjectmember',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='materialsubject',
            name='leader',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='subjects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='materialsubject',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.materialproject'),
        ),
        migrations.AddField(
            model_name='materialproject',
            name='leader',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='projects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='materialproject',
            name='members',
            field=models.ManyToManyField(related_name='my_projects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='imageusage',
            name='file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.datacontentimage'),
        ),
        migrations.AddField(
            model_name='imageusage',
            name='meta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.datameta'),
        ),
        migrations.AddField(
            model_name='fileusage',
            name='file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.datacontentfile'),
        ),
        migrations.AddField(
            model_name='fileusage',
            name='meta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.datameta'),
        ),
        migrations.AddField(
            model_name='datastatistic',
            name='meta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.datameta'),
        ),
        migrations.AddField(
            model_name='datastatistic',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.template'),
        ),
        migrations.AddField(
            model_name='datameta',
            name='category',
            field=models.ForeignKey(limit_choices_to={'leaf': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='storage.category'),
        ),
        migrations.AddField(
            model_name='datameta',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='storage.materialproject'),
        ),
        migrations.AddField(
            model_name='datameta',
            name='reviewer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_data', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='datameta',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='storage.materialsubject'),
        ),
        migrations.AddField(
            model_name='datameta',
            name='template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='storage.template'),
        ),
        migrations.AddField(
            model_name='datameta',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='datacontentimage',
            index=models.Index(fields=['file'], name='storage_dat_file_cd8ee1_idx'),
        ),
        migrations.AddIndex(
            model_name='datacontentfile',
            index=models.Index(fields=['file'], name='storage_dat_file_5bf2bd_idx'),
        ),
        migrations.AddIndex(
            model_name='datacontentfile',
            index=models.Index(fields=['created_at'], name='storage_dat_created_71b50e_idx'),
        ),
        migrations.AddIndex(
            model_name='temporarydatatemplate',
            index=models.Index(fields=['file'], name='storage_tem_file_f282cd_idx'),
        ),
        migrations.AddIndex(
            model_name='temporarydatatemplate',
            index=models.Index(fields=['created_at'], name='storage_tem_created_c9ba11_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='templatedatastatistic',
            unique_together={('template', 'day')},
        ),
        migrations.AlterUniqueTogether(
            name='projectsubjectmember',
            unique_together={('subject', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='imageusage',
            unique_together={('meta', 'file')},
        ),
        migrations.AlterUniqueTogether(
            name='fileusage',
            unique_together={('meta', 'file')},
        ),
        migrations.AlterUniqueTogether(
            name='datastatistic',
            unique_together={('meta', 'day')},
        ),
        migrations.AddIndex(
            model_name='datameta',
            index=models.Index(fields=['importing'], name='storage_dat_importi_a5ff5b_idx'),
        ),
        migrations.AddIndex(
            model_name='datameta',
            index=models.Index(fields=['-add_time'], name='storage_dat_add_tim_7044ec_idx'),
        ),
    ]
