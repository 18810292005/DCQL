stages:
  - lint
  - test

services:
  - postgres:12

variables:
  POSTGRES_DB: project_ci_test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: ""
  POSTGRES_HOST_AUTH_METHOD: trust
  DJANGO_SETTINGS_MODULE: mgedata.ci_settings

connect:
  image: postgres:12
  tags:
    - mge
  script:
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"

flake8:
  stage: lint
  tags:
    - mge
  image: python:3.7
  before_script:
    - pip install -q flake8 -i  http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com
  script:
    - flake8 --exclude *migrations*,__init__.py --max-line-length=120 --ignore=F405,F403,F811,F841,W504 apps

test:
  stage: test
  tags:
    - mge
  image: python:3.7
  script:
    - uname -a
    - echo deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free> /etc/apt/sources.list
    - apt-get clean
    - apt-get -y update
    - curl -sL https://deb.nodesource.com/setup_12.x | bash -
    - apt-get install -y nodejs
    - apt-get install --reinstall ca-certificates
    - pip install -r requirements-dev.txt -i  http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com
    - pip install -r apps/image_search/utils/sift_delivery/reqirements.txt -i  http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com
    - pip install pyexecjs -i  http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com
    - python manage.py makemigrations
    - python manage.py migrate
    - python manage.py test --debug-mode apps.certificate
