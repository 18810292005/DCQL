version: "3"

services:


  mongodb:
    image: mongo:4.4.0
    container_name: mge-dev-mongodb
    restart: always
    volumes:
      - mongodb-dev:/data/db

  postgres:
    image: postgres:14
    container_name: mge-dev-postgres
    restart: always
    volumes:
      - postgres-dev:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: mge
      POSTGRES_PASSWORD: m1cl@1202
      POSTGRES_DB: mge

  rabbitmq:
    image: rabbitmq:3.10-management
    container_name: mge-dev-rabbitmq
    restart: always
    volumes:
      - rabbitmq-dev:/var/lib/rabbitmq

  memcached:
    image: memcached:latest
    command: [ "-m", "4096",'-I','128M' ]
    container_name: mge-dev-memcached

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - esdata01:/usr/share/elasticsearch/data
      - ./ik-8.12.2:/usr/share/elasticsearch/plugins/ik-8.12.2
    environment:
      - node.name=es01
      - cluster.name=${CLUSTER_NAME}
      - cluster.initial_master_nodes=es01,es02
      - discovery.seed_hosts=es02
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -I http://localhost:9200 | grep -q 'HTTP/1.1 200 OK'",
        ]
      interval: 1s
      timeout: 2s
      retries: 120

  es02:
    depends_on:
      - es01
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - esdata02:/usr/share/elasticsearch/data
      - ./ik-8.12.2:/usr/share/elasticsearch/plugins/ik-8.12.2
    environment:
      - node.name=es02
      - cluster.name=${CLUSTER_NAME}
      - cluster.initial_master_nodes=es01,es02
      - discovery.seed_hosts=es01
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -I http://localhost:9200 | grep -q 'HTTP/1.1 200 OK'",
        ]
      interval: 1s
      timeout: 2s
      retries: 120


  mge-base:
    depends_on:
      es01:
        condition: service_healthy
      es02:
        condition: service_healthy
    build:
      context: ..
      dockerfile: docker/mge-base.Dockerfile
    image: mge-base

  mge-dev:
    build:
      context: ..
      dockerfile: docker/mge.Dockerfile
    container_name: mge-dev
    volumes:
      - static:/static
      - media:/media
    depends_on:
      - mge-base
      - mongodb
      - postgres
      - rabbitmq
      - memcached


  celery:
    build:
      context: ..
      dockerfile: docker/celery.Dockerfile
    container_name: mge-dev-celery
    volumes:
      - static:/static
      - media:/media
    depends_on:
      - mge-dev
  nginx:
    depends_on:
      - mge-dev
    build:
      context: .
      dockerfile: nginx.Dockerfile
    container_name: mge-dev-nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - static:/static
      - media:/media
      - type: bind
        source: ../logo.png
        target: /static/webpack/img/111.png
      - type: bind
        source: ../logo-login.png
        target: /static/webpack/img/logo18.png


volumes:
  mongodb-dev:
  postgres-dev:
  rabbitmq-dev:
  es-dev:
  static:
  media:
  esdata01:
  esdata02: